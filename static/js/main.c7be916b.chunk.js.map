{"version":3,"sources":["Components/Question.js","Components/Result.js","App.js","serviceWorker.js","index.js"],"names":["Question","props","addFunction","text","childrens","React","Children","toArray","children","className","Paper","elevation","map","answer","index","Button","variant","onClick","weights","Result","bread","white","black","sdoba","lavash","pizza","chiabutta","tortilia","weightArray","key","push","maxRate","Math","max","breadResult","length","reduce","total","current","App","useState","setWeights","questionIndex","setQuestionIndex","createWeights","AddWeight","value","newWeights","questions","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c7be916b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Button, Paper } from '@material-ui/core';\r\n\r\nexport default function Question(props) {\r\n\r\n    const {addFunction} = props;\r\n    const {text} = props;\r\n\r\n    const childrens = React.Children.toArray(props.children);\r\n\r\n    return (\r\n        <div className=\"question-container\">\r\n            <Paper elevation={3} className=\"m-2 p-4 question-box\">\r\n                {text}\r\n            </Paper>\r\n            <div className=\"answers-container\">\r\n                {childrens.map((answer, index) => {\r\n                    return (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={() => { addFunction(answer.props.weights) }}\r\n                            className={`m-2 bg-${index % 2 === 1 ? \"primary\" : \"secondary\"}`}\r\n                        >\r\n                            {answer}\r\n                        </Button>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\n\r\nimport { Button, Paper } from '@material-ui/core';\r\n\r\nexport default function Result(props) {\r\n\r\n    const {weights} = props\r\n\r\n    const bread = {\r\n        white: \"Белый хлеб\",\r\n        black: \"Чёрный хлеб\",\r\n        sdoba: \"Сдоба\",\r\n        lavash: \"Лаваш\",\r\n        pizza: \"Пицца\",\r\n        chiabutta: \"Чиабата\",\r\n        tortilia: \"Тортилья\",\r\n      }\r\n    \r\n    const weightArray = []\r\n    for(let key in weights)\r\n    {\r\n        weightArray.push(weights[key])\r\n    }\r\n    const maxRate = Math.max(...weightArray)\r\n\r\n    const breadResult = []\r\n    for(let key in weights)\r\n    {\r\n        if(weights[key] === maxRate) breadResult.push(bread[key])\r\n    }\r\n    \r\n\r\n    return (\r\n        <Paper className=\"p-4\">\r\n            <div>\r\n            Поздравляю, вы {breadResult[0]}!\r\n            </div>\r\n            {breadResult.length>1 &&\r\n            <div>\r\n                {`Возможно вы также: ${breadResult.reduce((total,current)=>{return `${total}, ${current}`})}`}\r\n            </div>}\r\n        </Paper>\r\n    )\r\n\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport './SASS/quest.css';\n\nimport Question from './Components/Question'\nimport Result from './Components/Result'\n\nfunction App() {\n\n  const [weights, setWeights] = useState({\n    white: 0,\n    black: 0,\n    sdoba: 0,\n    lavash: 0,\n    pizza: 0,\n    chiabutta: 0,\n    tortilia: 0,\n  })\n\n  const [questionIndex, setQuestionIndex] = useState(0)\n\n\n  const createWeights = (weights) => {\n    return {\n      white: weights[0],\n      black: weights[1],\n      sdoba: weights[2],\n      lavash: weights[3],\n      pizza: weights[4],\n      chiabutta: weights[5],\n      tortilia: weights[6],\n    }\n  }\n\n  const AddWeight = (value) => {\n    const newWeights = {}\n    for (let key in value) {\n      newWeights[key] = weights[key] + value[key]\n    }\n    setWeights(newWeights)\n    setQuestionIndex(questionIndex + 1)\n  }\n\n  const questions = [\n    <Question\n      addFunction={AddWeight}\n      text={'К какой кухни вы себя относите?'}\n    >\n      <div weights={createWeights([1, 1, 0.25, 0, 1, 1, 1])}>\n        Европейская\n        </div>\n      <div weights={createWeights([1, 1, 1, 1, 0, 0, 0])}>\n        Восточная\n        </div>\n    </Question>,\n    <Question\n      addFunction={AddWeight}\n      text={'Ваш рост?'}\n    >\n      <div weights={createWeights([0, 0, 0, 1, 1, 0.25, 1])}>\n        Низкий\n      </div>\n      <div weights={createWeights([1, 1, 1, 0, 0, 0, 0])}>\n        Высокий\n      </div>\n    </Question>,\n    <Question\n      addFunction={AddWeight}\n      text={'В вас есть изюменка?'}\n    >\n      <div weights={createWeights([0, 0.75, 0.9, 0, 1, 0.25, 0.25])}>\n        Да\n    </div>\n      <div weights={createWeights([1, 0.25, 0, 1, 0, 0.75, 0.75])}>\n        Нет\n    </div>\n    </Question>,\n    <Question\n      addFunction={AddWeight}\n      text={'Вы забываете что-то...?'}\n    >\n      <div weights={createWeights([0.7, 0.3, 0.1, 0, 0, 1, 0])}>\n        Часто\n    </div>\n      <div weights={createWeights([0.3, 0.7, 0.9, 1, 1, 0, 1])}>\n        Редко\n    </div>\n    </Question>,\n    <Question\n      addFunction={AddWeight}\n      text={'Вы видете себя фигурой?'}\n    >\n      <div weights={createWeights([1, 1, 0.1, 0, 0, 0.2, 0])}>\n        Квадрат\n    </div>\n      <div weights={createWeights([0, 0, 0.9, 1, 1, 0.8, 1])}>\n        Круг\n    </div>\n    </Question>,\n    <Question\n      addFunction={AddWeight}\n      text={'Представте пейзаж, вы видите?'}\n    >\n      <div weights={createWeights([1, 1, 0.7, 0, 0, 0, 0])}>\n        Горый, холмы\n    </div>\n      <div weights={createWeights([0, 0, 0.3, 1, 1, 1, 1])}>\n        Поляны, равнины\n    </div>\n    </Question>,\n    <Question\n      addFunction={AddWeight}\n      text={'Вы чаще всего ...?'}\n    >\n      <div weights={createWeights([0.5, 0.8, 0.1, 0.5, 0, 0.5, 0])}>\n        Грустный\n    </div>\n      <div weights={createWeights([0.5, 0.2, 0.9, 0.5, 1, 0.5, 1])}>\n        Счастиливый\n    </div>\n    </Question>,\n    <Question\n      addFunction={AddWeight}\n      text={'Вы носите одежду?'}\n    >\n      <div weights={createWeights([0, 1, 0.25, 0.3, 0.1, 0.3, 0.45])}>\n        Тёмных тонов\n    </div>\n      <div weights={createWeights([1, 0, 0.75, 0.7, 0.9, 0.7, 0.45])}>\n        Светлых тонов\n    </div>\n    </Question>,\n    <Question\n      addFunction={AddWeight}\n      text={'Вы помогаете кому-то?'}\n    >\n      <div weights={createWeights([0, 0, 0.75, 0.1, 1, 0.05, 1])}>\n        Часто\n    </div>\n      <div weights={createWeights([1, 1, 0.25, 0.9, 0, 0.95, 0])}>\n        Редко\n    </div>\n    </Question>,\n    <Question\n      addFunction={AddWeight}\n      text={'В компании вы?'}\n    >\n      <div weights={createWeights([0, 0, 0.6, 0, 1, 0, 1])}>\n        Центр внимания\n    </div>\n      <div weights={createWeights([1, 1, 0.4, 1, 0, 1, 0])}>\n        Особо не выделяетесь\n    </div>\n    </Question>\n    // <Question\n    //   addFunction={AddWeight}\n    //   text={'К какой кухни вы себя относите?'}\n    // >\n    //   <div weights={createWeights([1, 1, 0.25, 0, 1, 1, 1])}>\n    //     Европейская\n    // </div>\n    //   <div weights={createWeights([1, 1, 1, 1, 0, 0, 0])}>\n    //     Восточная\n    // </div>\n    // </Question>,\n    // <Question\n    //   addFunction={AddWeight}\n    //   text={'К какой кухни вы себя относите?'}\n    // >\n    //   <div weights={createWeights([1, 1, 0.25, 0, 1, 1, 1])}>\n    //     Европейская\n    // </div>\n    //   <div weights={createWeights([1, 1, 1, 1, 0, 0, 0])}>\n    //     Восточная\n    // </div>\n    // </Question>,\n  ]\n\n\n  console.log(weights)\n\n  return (\n    <div className=\"App fullSize bg-g-blue-field\">\n      {questionIndex < questions.length\n        ? questions[questionIndex]\n        : <Result weights={weights} />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}